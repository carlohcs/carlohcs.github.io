{"version":3,"file":"static/webpack/static/development/pages/engenheiro-de-software.js.4739e68127549192f8ab.hot-update.js","sources":["webpack:///./layouts/main.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Head from 'next/head'\nimport Header from '../components/Header'\nimport Menu from '../components/Menu'\nimport 'normalize.css'\nimport AppContext from '../components/AppProvider'\nimport GlobalStyle from '../components/GlobalStyle'\n\n// https://nextjs.org/learn/basics/using-shared-components/the-layout-component\n\n// Fonts vs SVG: https://fontawesome.com/how-to-use/on-the-web/other-topics/performance\n\n// TODO: Resolver\n// Warning: Main defines an invalid contextType. contextType should point to the Context object returned by React.createContext(). Did you accidentally pass the Context.Consumer instead?\n// O modo utilizado agora não é eficiente, pois o usuário consegue ver o tema sendo mudado em tempo de abertura da página\nclass Main extends Component {\n  static contextType = AppContext\n\n  constructor(props) {\n    super(props)\n\n    this.state = { loadedConfigs: false }\n  }\n  \n  componentDidMount() {\n    const storage = require('../components/helpers/storage').default\n    const savedTheme = storage.getTheme()\n    const savedLang = storage.getLang()\n\n    if (savedTheme !== '' && savedTheme !== this.context.getTheme()) {\n      this.context.toggleTheme(savedTheme === this.context.themes.DARK)\n    }\n\n    if (savedLang !== '' && savedLang !== this.context.getLang()) {\n      this.context.toggleLang(savedLang)\n    }\n\n    this.setState({ loadedConfigs: true })\n  }\n\n  render() {\n    const loadedConfigs = this.state.loadedConfigs\n    const mainContent = !loadedConfigs ? '' : <div className=\"main-content\">\n        {this.props.children}\n      </div>\n\n    return (\n      <div className=\"app\">\n        <GlobalStyle />\n        <Head>\n          <title>{this.context.getMessage('page', 'titleSuffix')}</title>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          <meta charSet=\"utf-8\" />\n          <link href=\"https://fonts.googleapis.com/css?family=Rubik:300,500&display=swap\" rel=\"stylesheet\"></link>\n        </Head>\n        <Header />\n        <Menu />\n        { mainContent }\n      </div>\n    )\n  }\n}\n\n// https://stackoverflow.com/questions/49809884/access-react-context-outside-of-render-function?answertab=votes#tab-top\n// https://reactjs.org/docs/hooks-reference.html#usecontext\nexport default Main"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAAA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAAA;AAAA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;;;;AA7CA;AAiDA;AACA;AACA;AAnDA;AACA;AAiDA;;;;A","sourceRoot":""}